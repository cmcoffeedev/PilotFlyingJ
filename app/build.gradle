plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "com.interview.pfj"
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Always show the result of every unit test when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navVersion"
    implementation "com.google.android.gms:play-services-maps:$rootProject.maps"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitGsonVersion"

    //leakcanary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanary"

    //hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hilt"
    kapt "com.google.dagger:hilt-compiler:$rootProject.hilt"

    //kotlinx_serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$rootProject.serializationJson"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$rootProject.serializationRetrofitConverter"

    //okhttp
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttp"

    //testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.coreTestingVersion"
    testImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.robolectricVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.mockito.kotlin:mockito-kotlin:$rootProject.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"
    testImplementation "androidx.test.ext:junit-ktx:$rootProject.androidXTestExtKotlinRunnerVersion"
    testImplementation "androidx.test:core-ktx:$rootProject.androidXTestCoreVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.mockWebServer"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutinesTest"
}
